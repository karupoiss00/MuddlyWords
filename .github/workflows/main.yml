on:
  push:
    tags:
      - '*'

name: Release

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.tag_name.outputs.tag }}
    steps:
      - name: Get tag name
        id: tag_name
        uses: olegtarasov/get-tag@v2.1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.tag_name.outputs.tag }}
          body: |
            # Draft release (${{ steps.tag_name.outputs.tag }})
            [Guide for updating](https://github.com/YariKartoshe4ka/Space-Way/blob/master/docs/UPDATE.md)
            ### Changes
          draft: true
          prerelease: false

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Pyinstaller
        run: pip install pyinstaller==4.3
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Space Way
        run: pip install .
      - name: Build binary
        run: pyinstaller -Fw -i spaceway/icon.ico --collect-all spaceway --hidden-import platformdirs.windows "Space Way.py"
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: "./dist/Space Way.exe"
          asset_name: "Space-Way-${{ needs.create-release.outputs.tag_name }}.exe"
          asset_content_type: application/exe

  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: android
      - name: Configure payloads
        run: |
          VERSION=$(jq < spaceway/config/config.json .version -r)
          sed -i "s/#VERSION#/$VERSION/" buildozer.spec
          sed -i "s/#VERSION#/'$VERSION'/" setupfiles/android/p4a_recipes/spaceway/__init__.py
      - name: Build APK
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          command: |
            python3 setup.py sdist
            PATH_TO_PACKAGES=$(pwd)/dist buildozer android debug
      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.buildozer.outputs.filename }}
          asset_name: "Space-Way-${{ needs.create-release.outputs.tag_name }}.apk"
          asset_content_type: application/vnd.android.package-archive

  publish-pypi:
    name: Publish on PyPI
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: pip install build
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: pypi
      - name: Build project
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Get path to wheel
        id: wheel_path
        run: |
          cd ./dist
          echo '::set-output name=path::'$(ls -t *.whl | head -1)
      - name: Upload wheel to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.wheel_path.outputs.path }}
          asset_name: ${{ steps.wheel_path.outputs.path }}
          asset_content_type: application/x-wheel+zip
